{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "49a74c11-9d50-43d6-95dd-0a5407f8722c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import json\n",
    "from difflib import get_close_matches \n",
    "\n",
    "import nltk\n",
    "from nltk.stem import WordNetLemmatizer\n",
    "from nltk.corpus import stopwords\n",
    "\n",
    "import re\n",
    "\n",
    "data_path = 'datasets/IPC_chatBot.json'\n",
    "\n",
    "with open(data_path, 'r') as file:\n",
    "    data = json.load(file)\n",
    "\n",
    "def find_best_match(user_query, keywords):\n",
    "    matches = get_close_matches(user_query, keywords, n=3, cutoff=0.3)\n",
    "    return matches if matches else None\n",
    "\n",
    "def get_section(keyword, data):\n",
    "    for s in data['sections']:\n",
    "        if s['keywords'] == keyword:\n",
    "            return [s['number'], s['section']]\n",
    "\n",
    "def clean_input(user_input):\n",
    "\n",
    "    stop_words = stopwords.words('english')\n",
    "    \n",
    "    lem = WordNetLemmatizer()\n",
    "    \n",
    "    user_input= re.sub(r'[^\\w]', ' ', user_input)\n",
    "    user_input = re.sub(r'\\s\\s*', ' ', user_input)\n",
    "\n",
    "    user_input = lem.lemmatize(user_input)\n",
    "    user_input = nltk.word_tokenize(user_input.lower())\n",
    "    \n",
    "    for word in user_input:\n",
    "        if word in stop_words:\n",
    "            user_input.remove(word)\n",
    "            \n",
    "    user_input = sorted(set(user_input))\n",
    "    user_input = ' '.join(user_input)\n",
    "\n",
    "    return user_input\n",
    "\n",
    "def chatbot(data):\n",
    "    \n",
    "    while True:\n",
    "        user_input = input('USER: ')\n",
    "    \n",
    "        if user_input == 'exit':\n",
    "            break\n",
    "        else:\n",
    "            user_input = clean_input(user_input)\n",
    "        \n",
    "        best_match = find_best_match(user_input, [s['keywords'] for s in data['sections']])\n",
    "\n",
    "        for i in range(3):\n",
    "            cnt = 1\n",
    "            if best_match:\n",
    "                law = get_section(best_match[i], data)\n",
    "                print(f'BOT: {law[0]}:\\n{law[1]}' )\n",
    "                print()\n",
    "            else:\n",
    "                break\n",
    "        \n",
    "        print('Kindly enter a more detailed report that contains strong keywords to help you out in your case.')\n",
    "\n",
    "chatbot(data)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
